/**
 * 16-bit incrementer:
 * out = in + 1 (arithmetic addition)
 */

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
        /**
         * The binary sum method must be applied
         * E.g.:
         *                           1 1        => [Carry]
         * --------------------------------
         * 1 0 0 1 0 0 1 0 0 1 1 0 0 0 1 1 +    => [First binary]
         *                               1 =    => [True value]
         * ---------------------------------
         * 1 0 0 1 0 0 1 0 0 1 1 0 0 1 0 0
         *
         * Overflow is neither detected nor handled
         *
         * As you can see from the example above, to increment a 16-bit input by one,
         * add 1 (= true) to the rightmost bit of the input
         */
        HalfAdder(a=in[0], b=true, sum=out[0], carry=carry0);

        HalfAdder(a=in[1], b=carry0, sum=out[1], carry=carry1);
        HalfAdder(a=in[2], b=carry1, sum=out[2], carry=carry2);
        HalfAdder(a=in[3], b=carry2, sum=out[3], carry=carry3);
        HalfAdder(a=in[4], b=carry3, sum=out[4], carry=carry4);
        HalfAdder(a=in[5], b=carry4, sum=out[5], carry=carry5);
        HalfAdder(a=in[6], b=carry5, sum=out[6], carry=carry6);
        HalfAdder(a=in[7], b=carry6, sum=out[7], carry=carry7);
        HalfAdder(a=in[8], b=carry7, sum=out[8], carry=carry8);
        HalfAdder(a=in[9], b=carry8, sum=out[9], carry=carry9);
        HalfAdder(a=in[10], b=carry9, sum=out[10], carry=carry10);
        HalfAdder(a=in[11], b=carry10, sum=out[11], carry=carry11);
        HalfAdder(a=in[12], b=carry11, sum=out[12], carry=carry12);
        HalfAdder(a=in[13], b=carry12, sum=out[13], carry=carry13);
        HalfAdder(a=in[14], b=carry13, sum=out[14], carry=carry14);
        HalfAdder(a=in[15], b=carry14, sum=out[15], carry=false);
}